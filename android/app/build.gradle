def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.bbuddy_frontend"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.bbuddy_frontend"
        
        // Set the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}


// android {
//     namespace "com.example.bbuddy_frontend"
//     compileSdkVersion flutter.compileSdkVersion
//     ndkVersion flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility JavaVersion.VERSION_1_8
//         targetCompatibility JavaVersion.VERSION_1_8
//     }

//     kotlinOptions {
//         jvmTarget = '1.8'
//     }

//     sourceSets {
//         main.java.srcDirs += 'src/main/kotlin'
//     }

//     defaultConfig {
//     // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//     applicationId "com.example.bbuddy_frontend"
//     // REMOVE FROM HERE
//     // You can update the FAILURE: Build failed with an exception.
//     * What went wrong:
//     Execution failed for task ':app:mapReleaseSourceSetPaths'.
//     > Error while evaluating property 'extraGeneratedResDir' of task ':app:mapReleaseSourceSetPaths'
//     > Failed to calculate the value of task ':app:mapReleaseSourceSetPaths' property 'extraGeneratedResDir'.
//     > Querying the mapped value of provider(java.util.Set) before task ':app:processReleaseGoogleServices' has completed is not supported
//     * Try:
//     > Run with --stacktrace option to get the stack trace.
//     > Run with --info or --debug option to get more log output.
//     > Run with --scan to get full insights.
//     // TO HERE
//     following values to match your application needs.
//     // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//     minSdkVersion flutter.minSdkVersion
//     targetSdkVersion flutter.targetSdkVersion
//     versionCode flutterVersionCode.toInteger()
//     versionName flutterVersionName
// }


//     defaultConfig {
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId "com.example.bbuddy_frontend"
//         // You can update the FAILURE: Build failed with an exception.

// * What went wrong:
// Execution failed for task ':app:mapReleaseSourceSetPaths'.
// > Error while evaluating property 'extraGeneratedResDir' of task ':app:mapReleaseSourceSetPaths'
//    > Failed to calculate the value of task ':app:mapReleaseSourceSetPaths' property 'extraGeneratedResDir'.
//       > Querying the mapped value of provider(java.util.Set) before task ':app:processReleaseGoogleServices' has completed is not supported

// * Try:
// > Run with --stacktrace option to get the stack trace.
// > Run with --info or --debug option to get more log output.
// > Run with --scan to get full insights.

// following values to match your application needs.
//         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//         minSdkVersion flutter.minSdkVersion
//         targetSdkVersion flutter.targetSdkVersion
//         versionCode flutterVersionCode.toInteger()
//         versionName flutterVersionName
//     }

//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now, so `flutter run --release` works.
//             signingConfig signingConfigs.debug
//         }
//     }
// }

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

dependencies {
    implementation 'com.google.android.material:material:1.8.0'
}

tasks.whenTaskAdded { task ->
    if (task.name == 'mapReleaseSourceSetPaths') {
        task.dependsOn 'processReleaseGoogleServices'
    }
}
